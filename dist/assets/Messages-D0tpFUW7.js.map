{"version":3,"file":"Messages-D0tpFUW7.js","sources":["../../src/pages/Messages.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useMessages } from '../contexts/MessageContext';\nimport { useAuth } from '../contexts/AuthContext';\nimport Spinner from '../components/common/Spinner';\nimport Header from '../components/common/Header';\n\nconst Messages: React.FC = () => {\n  const { chatId } = useParams<{ chatId: string }>();\n  const { currentUser } = useAuth();\n  const navigate = useNavigate();\n  const {\n    chats,\n    activeChat,\n    messages,\n    loadingChats,\n    loadingMessages,\n    error,\n    sendMessage,\n    setActiveChatById,\n  } = useMessages();\n  \n  const [newMessage, setNewMessage] = useState('');\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n  \n  // Redirect naar login als gebruiker niet is ingelogd\n  useEffect(() => {\n    if (!currentUser) {\n      navigate('/login');\n    }\n  }, [currentUser, navigate]);\n  \n  // Stel actieve chat in als chatId is opgegeven\n  useEffect(() => {\n    if (chatId) {\n      setActiveChatById(chatId);\n    }\n  }, [chatId, setActiveChatById]);\n  \n  // Scroll naar het laatste bericht als er nieuwe berichten zijn\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n  \n  // Focus op het inputveld na het versturen van een bericht\n  useEffect(() => {\n    if (activeChat) {\n      inputRef.current?.focus();\n    }\n  }, [messages.length, activeChat]);\n  \n  if (loadingChats) {\n    return (\n      <div className=\"flex justify-center items-center min-h-screen\">\n        <Spinner />\n      </div>\n    );\n  }\n  \n  const handleSendMessage = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!newMessage.trim() || !activeChat) return;\n    \n    // Bewaar het bericht tijdelijk\n    const messageToSend = newMessage.trim();\n    \n    // Leeg het veld onmiddellijk (voor betere gebruikservaring)\n    setNewMessage('');\n    \n    try {\n      // Verstuur het bewaarde bericht\n      await sendMessage(activeChat.id, messageToSend);\n    } catch (err) {\n      console.error('Fout bij het versturen van bericht:', err);\n      // Als er een fout optreedt, herstel het bericht in het veld\n      setNewMessage(messageToSend);\n    }\n  };\n  \n  const handleChatSelect = (chatId: string) => {\n    navigate(`/messages/${chatId}`);\n  };\n  \n  const formatTimestamp = (timestamp: any) => {\n    if (!timestamp) return '';\n    \n    const date = timestamp.toDate();\n    const today = new Date();\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    \n    if (date.toDateString() === today.toDateString()) {\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    } else if (date.toDateString() === yesterday.toDateString()) {\n      return 'Gisteren';\n    } else {\n      return date.toLocaleDateString();\n    }\n  };\n  \n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header />\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h1 className=\"text-3xl font-bold\">Berichten</h1>\n          <button\n            onClick={() => navigate('/dashboard')}\n            className=\"flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M9.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L7.414 9H15a1 1 0 110 2H7.414l2.293 2.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\n            </svg>\n            Terug naar Dashboard\n          </button>\n        </div>\n        \n        {error && (\n          <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4\">\n            {error}\n          </div>\n        )}\n        \n        <div className=\"flex flex-col md:flex-row gap-4 bg-white rounded-lg shadow-lg overflow-hidden min-h-[70vh]\">\n          {/* Lijst van chats */}\n          <div className=\"md:w-1/3 border-r\">\n            <div className=\"p-4 bg-gray-50 border-b\">\n              <h2 className=\"font-semibold text-lg\">Gesprekken</h2>\n            </div>\n            \n            <div className=\"overflow-y-auto h-[calc(70vh-4rem)]\">\n              {chats.length === 0 ? (\n                <div className=\"p-6 text-center text-gray-500\">\n                  Geen berichten gevonden. Start een gesprek via het profiel van een kandidaat of recruiter.\n                </div>\n              ) : (\n                chats.map((chat) => (\n                  <div\n                    key={chat.id}\n                    className={`p-4 border-b hover:bg-gray-50 cursor-pointer ${\n                      activeChat?.id === chat.id ? 'bg-blue-50' : ''\n                    }`}\n                    onClick={() => handleChatSelect(chat.id)}\n                  >\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"relative\">\n                        {chat.otherUser.photoURL ? (\n                          <img\n                            src={chat.otherUser.photoURL}\n                            alt={chat.otherUser.displayName}\n                            className=\"w-12 h-12 rounded-full object-cover\"\n                          />\n                        ) : (\n                          <div className=\"w-12 h-12 rounded-full bg-gray-200 flex items-center justify-center text-lg font-medium text-gray-600\">\n                            {chat.otherUser.displayName.substring(0, 1).toUpperCase()}\n                          </div>\n                        )}\n                        {typeof chat.unreadCount === 'number' ? (\n                          chat.unreadCount > 0 && (\n                            <span className=\"absolute -top-1 -right-1 bg-blue-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center\">\n                              {chat.unreadCount}\n                            </span>\n                          )\n                        ) : (\n                          (chat.unreadCount?.[currentUser?.uid || ''] || 0) > 0 && (\n                            <span className=\"absolute -top-1 -right-1 bg-blue-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center\">\n                              {chat.unreadCount?.[currentUser?.uid || ''] || 0}\n                            </span>\n                          )\n                        )}\n                      </div>\n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex justify-between items-center\">\n                          <h3 className=\"font-medium truncate\">{chat.otherUser.displayName}</h3>\n                          {chat.lastMessageTimestamp && (\n                            <span className=\"text-xs text-gray-500\">\n                              {formatTimestamp(chat.lastMessageTimestamp)}\n                            </span>\n                          )}\n                        </div>\n                        <p className=\"text-sm text-gray-600 truncate\">\n                          {chat.lastMessage ? chat.lastMessage : 'Geen berichten'}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n          \n          {/* Berichtenvenster */}\n          <div className=\"md:w-2/3 flex flex-col\">\n            {activeChat ? (\n              <>\n                {/* Berichtenkop */}\n                <div className=\"p-4 bg-gray-50 border-b flex items-center gap-3\">\n                  {activeChat.otherUser.photoURL ? (\n                    <img\n                      src={activeChat.otherUser.photoURL}\n                      alt={activeChat.otherUser.displayName}\n                      className=\"w-10 h-10 rounded-full object-cover\"\n                    />\n                  ) : (\n                    <div className=\"w-10 h-10 rounded-full bg-gray-200 flex items-center justify-center text-md font-medium text-gray-600\">\n                      {activeChat.otherUser.displayName.substring(0, 1).toUpperCase()}\n                    </div>\n                  )}\n                  <div>\n                    <h2 className=\"font-semibold\">{activeChat.otherUser.displayName}</h2>\n                    <p className=\"text-sm text-gray-500\">{activeChat.otherUser.role}</p>\n                  </div>\n                </div>\n                \n                {/* Berichten */}\n                <div className=\"flex-1 overflow-y-auto p-4 space-y-4 h-[calc(70vh-12rem)]\">\n                  {loadingMessages ? (\n                    <div className=\"flex justify-center items-center h-full\">\n                      <Spinner />\n                    </div>\n                  ) : messages.length === 0 ? (\n                    <div className=\"text-center text-gray-500 mt-10\">\n                      Geen berichten. Stuur een bericht om het gesprek te starten.\n                    </div>\n                  ) : (\n                    messages.map((message) => (\n                      <div\n                        key={message.id}\n                        className={`flex ${\n                          message.senderId === currentUser?.uid ? 'justify-end' : 'justify-start'\n                        }`}\n                      >\n                        <div\n                          className={`max-w-[70%] p-3 rounded-lg ${\n                            message.senderId === currentUser?.uid\n                              ? 'bg-blue-500 text-white rounded-br-none'\n                              : 'bg-gray-200 text-gray-800 rounded-bl-none'\n                          }`}\n                        >\n                          <p>{message.text}</p>\n                          <div\n                            className={`text-xs mt-1 ${\n                              message.senderId === currentUser?.uid ? 'text-blue-100' : 'text-gray-500'\n                            }`}\n                          >\n                            {formatTimestamp(message.timestamp)}\n                            {message.senderId === currentUser?.uid && (\n                              <span className=\"ml-1\">\n                                {message.read ? ' • Gelezen' : ''}\n                              </span>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    ))\n                  )}\n                  <div ref={messagesEndRef} />\n                </div>\n                \n                {/* Berichteninvoer */}\n                <form onSubmit={handleSendMessage} className=\"p-4 border-t\">\n                  <div className=\"flex gap-2\">\n                    <input\n                      ref={inputRef}\n                      type=\"text\"\n                      value={newMessage}\n                      onChange={(e) => setNewMessage(e.target.value)}\n                      placeholder=\"Typ een bericht...\"\n                      className=\"flex-1 border rounded-full px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <button\n                      type=\"submit\"\n                      disabled={!newMessage.trim()}\n                      className=\"bg-blue-500 text-white rounded-full p-2 hover:bg-blue-600 disabled:opacity-50\"\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"h-6 w-6\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\"\n                        />\n                      </svg>\n                    </button>\n                  </div>\n                </form>\n              </>\n            ) : (\n              <div className=\"flex flex-col items-center justify-center h-full p-10 text-center text-gray-500\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-16 w-16 mb-4 text-gray-300\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={1}\n                    d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                  />\n                </svg>\n                <h3 className=\"text-lg font-medium mb-2\">Geen actief gesprek</h3>\n                <p>Selecteer een gesprek in de lijst links om berichten weer te geven.</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Messages; "],"names":["Messages","chatId","useParams","currentUser","useAuth","navigate","useNavigate","chats","activeChat","messages","loadingChats","loadingMessages","error","sendMessage","setActiveChatById","useMessages","newMessage","setNewMessage","useState","messagesEndRef","useRef","inputRef","useEffect","_a","jsx","Spinner","handleSendMessage","e","messageToSend","err","handleChatSelect","formatTimestamp","timestamp","date","today","yesterday","jsxs","Header","chat","_b","Fragment","message"],"mappings":"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"}