{"version":3,"file":"Messages-Bt-RZS4d.js","sources":["../../src/components/common/Spinner.tsx","../../src/pages/Messages.tsx"],"sourcesContent":["import React from 'react';\n\ninterface SpinnerProps {\n  size?: 'sm' | 'md' | 'lg';\n  color?: string;\n}\n\nconst Spinner: React.FC<SpinnerProps> = ({ \n  size = 'md', \n  color = 'text-blue-500' \n}) => {\n  const sizeMap = {\n    sm: 'w-4 h-4',\n    md: 'w-8 h-8',\n    lg: 'w-12 h-12'\n  };\n\n  return (\n    <div className=\"flex justify-center items-center\">\n      <div className={`${sizeMap[size]} ${color} animate-spin`}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n        >\n          <circle\n            className=\"opacity-25\"\n            cx=\"12\"\n            cy=\"12\"\n            r=\"10\"\n            stroke=\"currentColor\"\n            strokeWidth=\"4\"\n          ></circle>\n          <path\n            className=\"opacity-75\"\n            fill=\"currentColor\"\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          ></path>\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner; ","import React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useMessages } from '../contexts/MessageContext';\nimport { useAuth } from '../contexts/AuthContext';\nimport Spinner from '../components/common/Spinner';\n\nconst Messages: React.FC = () => {\n  const { chatId } = useParams<{ chatId: string }>();\n  const { currentUser } = useAuth();\n  const navigate = useNavigate();\n  const {\n    chats,\n    activeChat,\n    messages,\n    loadingChats,\n    loadingMessages,\n    error,\n    sendMessage,\n    setActiveChatById,\n  } = useMessages();\n  \n  const [newMessage, setNewMessage] = useState('');\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n  \n  // Redirect naar login als gebruiker niet is ingelogd\n  useEffect(() => {\n    if (!currentUser) {\n      navigate('/login');\n    }\n  }, [currentUser, navigate]);\n  \n  // Stel actieve chat in als chatId is opgegeven\n  useEffect(() => {\n    if (chatId) {\n      setActiveChatById(chatId);\n    }\n  }, [chatId, setActiveChatById]);\n  \n  // Scroll naar het laatste bericht als er nieuwe berichten zijn\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n  \n  // Focus op het inputveld na het versturen van een bericht\n  useEffect(() => {\n    if (activeChat) {\n      inputRef.current?.focus();\n    }\n  }, [messages.length, activeChat]);\n  \n  if (loadingChats) {\n    return (\n      <div className=\"flex justify-center items-center min-h-screen\">\n        <Spinner />\n      </div>\n    );\n  }\n  \n  const handleSendMessage = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!newMessage.trim() || !activeChat) return;\n    \n    // Bewaar het bericht tijdelijk\n    const messageToSend = newMessage.trim();\n    \n    // Leeg het veld onmiddellijk (voor betere gebruikservaring)\n    setNewMessage('');\n    \n    try {\n      // Verstuur het bewaarde bericht\n      await sendMessage(activeChat.id, messageToSend);\n    } catch (err) {\n      console.error('Fout bij het versturen van bericht:', err);\n      // Als er een fout optreedt, herstel het bericht in het veld\n      setNewMessage(messageToSend);\n    }\n  };\n  \n  const handleChatSelect = (chatId: string) => {\n    navigate(`/messages/${chatId}`);\n  };\n  \n  const formatTimestamp = (timestamp: any) => {\n    if (!timestamp) return '';\n    \n    const date = timestamp.toDate();\n    const today = new Date();\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    \n    if (date.toDateString() === today.toDateString()) {\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    } else if (date.toDateString() === yesterday.toDateString()) {\n      return 'Gisteren';\n    } else {\n      return date.toLocaleDateString();\n    }\n  };\n  \n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold mb-6\">Berichten</h1>\n      \n      {error && (\n        <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4\">\n          {error}\n        </div>\n      )}\n      \n      <div className=\"flex flex-col md:flex-row gap-4 bg-white rounded-lg shadow-lg overflow-hidden min-h-[70vh]\">\n        {/* Lijst van chats */}\n        <div className=\"md:w-1/3 border-r\">\n          <div className=\"p-4 bg-gray-50 border-b\">\n            <h2 className=\"font-semibold text-lg\">Gesprekken</h2>\n          </div>\n          \n          <div className=\"overflow-y-auto h-[calc(70vh-4rem)]\">\n            {chats.length === 0 ? (\n              <div className=\"p-6 text-center text-gray-500\">\n                Geen berichten gevonden. Start een gesprek via het profiel van een kandidaat of recruiter.\n              </div>\n            ) : (\n              chats.map((chat) => (\n                <div\n                  key={chat.id}\n                  className={`p-4 border-b hover:bg-gray-50 cursor-pointer ${\n                    activeChat?.id === chat.id ? 'bg-blue-50' : ''\n                  }`}\n                  onClick={() => handleChatSelect(chat.id)}\n                >\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"relative\">\n                      {chat.otherUser.photoURL ? (\n                        <img\n                          src={chat.otherUser.photoURL}\n                          alt={chat.otherUser.displayName}\n                          className=\"w-12 h-12 rounded-full object-cover\"\n                        />\n                      ) : (\n                        <div className=\"w-12 h-12 rounded-full bg-gray-200 flex items-center justify-center text-lg font-medium text-gray-600\">\n                          {chat.otherUser.displayName.substring(0, 1).toUpperCase()}\n                        </div>\n                      )}\n                      {typeof chat.unreadCount === 'number' ? (\n                        chat.unreadCount > 0 && (\n                          <span className=\"absolute -top-1 -right-1 bg-blue-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center\">\n                            {chat.unreadCount}\n                          </span>\n                        )\n                      ) : (\n                        (chat.unreadCount?.[currentUser?.uid || ''] || 0) > 0 && (\n                          <span className=\"absolute -top-1 -right-1 bg-blue-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center\">\n                            {chat.unreadCount?.[currentUser?.uid || ''] || 0}\n                          </span>\n                        )\n                      )}\n                    </div>\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"flex justify-between items-center\">\n                        <h3 className=\"font-medium truncate\">{chat.otherUser.displayName}</h3>\n                        {chat.lastMessageTimestamp && (\n                          <span className=\"text-xs text-gray-500\">\n                            {formatTimestamp(chat.lastMessageTimestamp)}\n                          </span>\n                        )}\n                      </div>\n                      <p className=\"text-sm text-gray-600 truncate\">\n                        {chat.lastMessage ? chat.lastMessage : 'Geen berichten'}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n        \n        {/* Berichtenvenster */}\n        <div className=\"md:w-2/3 flex flex-col\">\n          {activeChat ? (\n            <>\n              {/* Berichtenkop */}\n              <div className=\"p-4 bg-gray-50 border-b flex items-center gap-3\">\n                {activeChat.otherUser.photoURL ? (\n                  <img\n                    src={activeChat.otherUser.photoURL}\n                    alt={activeChat.otherUser.displayName}\n                    className=\"w-10 h-10 rounded-full object-cover\"\n                  />\n                ) : (\n                  <div className=\"w-10 h-10 rounded-full bg-gray-200 flex items-center justify-center text-md font-medium text-gray-600\">\n                    {activeChat.otherUser.displayName.substring(0, 1).toUpperCase()}\n                  </div>\n                )}\n                <div>\n                  <h2 className=\"font-semibold\">{activeChat.otherUser.displayName}</h2>\n                  <p className=\"text-sm text-gray-500\">{activeChat.otherUser.role}</p>\n                </div>\n              </div>\n              \n              {/* Berichten */}\n              <div className=\"flex-1 overflow-y-auto p-4 space-y-4 h-[calc(70vh-12rem)]\">\n                {loadingMessages ? (\n                  <div className=\"flex justify-center items-center h-full\">\n                    <Spinner />\n                  </div>\n                ) : messages.length === 0 ? (\n                  <div className=\"text-center text-gray-500 mt-10\">\n                    Geen berichten. Stuur een bericht om het gesprek te starten.\n                  </div>\n                ) : (\n                  messages.map((message) => (\n                    <div\n                      key={message.id}\n                      className={`flex ${\n                        message.senderId === currentUser?.uid ? 'justify-end' : 'justify-start'\n                      }`}\n                    >\n                      <div\n                        className={`max-w-[70%] p-3 rounded-lg ${\n                          message.senderId === currentUser?.uid\n                            ? 'bg-blue-500 text-white rounded-br-none'\n                            : 'bg-gray-200 text-gray-800 rounded-bl-none'\n                        }`}\n                      >\n                        <p>{message.text}</p>\n                        <div\n                          className={`text-xs mt-1 ${\n                            message.senderId === currentUser?.uid ? 'text-blue-100' : 'text-gray-500'\n                          }`}\n                        >\n                          {formatTimestamp(message.timestamp)}\n                          {message.senderId === currentUser?.uid && (\n                            <span className=\"ml-1\">\n                              {message.read ? ' • Gelezen' : ''}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                )}\n                <div ref={messagesEndRef} />\n              </div>\n              \n              {/* Berichteninvoer */}\n              <form onSubmit={handleSendMessage} className=\"p-4 border-t\">\n                <div className=\"flex gap-2\">\n                  <input\n                    ref={inputRef}\n                    type=\"text\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    placeholder=\"Typ een bericht...\"\n                    className=\"flex-1 border rounded-full px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                  <button\n                    type=\"submit\"\n                    disabled={!newMessage.trim()}\n                    className=\"bg-blue-500 text-white rounded-full p-2 hover:bg-blue-600 disabled:opacity-50\"\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      className=\"h-6 w-6\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\"\n                      />\n                    </svg>\n                  </button>\n                </div>\n              </form>\n            </>\n          ) : (\n            <div className=\"flex flex-col items-center justify-center h-full p-10 text-center text-gray-500\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-16 w-16 mb-4 text-gray-300\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={1}\n                  d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                />\n              </svg>\n              <h3 className=\"text-lg font-medium mb-2\">Geen actief gesprek</h3>\n              <p>Selecteer een gesprek in de lijst links om berichten weer te geven.</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Messages; "],"names":["Spinner","size","color","sizeMap","jsx","jsxs","Messages","chatId","useParams","currentUser","useAuth","navigate","useNavigate","chats","activeChat","messages","loadingChats","loadingMessages","error","sendMessage","setActiveChatById","useMessages","newMessage","setNewMessage","useState","messagesEndRef","useRef","inputRef","useEffect","_a","handleSendMessage","e","messageToSend","err","handleChatSelect","formatTimestamp","timestamp","date","today","yesterday","chat","_b","Fragment","message"],"mappings":"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"}