{"version":3,"mappings":";gTAMA,MAAMA,EAAU,IACbC,OAAA,OAAI,UAAU,4CACb,UAACC,MAAA,OAAI,UAAU,8EAA+E,GAC7FA,EAAA,WAAI,UAAU,OAAO,SAAkB,wBAC1C,EAIIC,EAAqBC,OAAK,IAAMC,EAAA,WAAO,kCAA4C,iCAAC,EACpFC,EAAqBF,OAAK,IAAMC,EAAA,WAAO,kCAA4C,iCAAC,EACpFE,EAAcH,OAAK,UAAM,OAAO,2BAAsB,2CAAC,EACvDI,EAAYJ,OAAK,UAAM,OAAO,yBAAoB,kCAAC,EACnDK,EAAYL,OAAK,UAAM,OAAO,yBAAoB,uCAAC,EACnDM,EAAUN,OAAK,UAAM,OAAO,uBAAkB,uCAAC,EAG/CO,EAAY,CAAC,CAAE,YAAAC,EAAa,YAAAC,MAChC,QAAQ,IAAI,qCAAsC,CAChD,YAAaA,GAAA,YAAAA,EAAa,IAC1B,YAAaD,GAAA,YAAAA,EAAa,KAC1B,YAAaA,GAAA,YAAAA,EAAa,YAC3B,EAGGC,GAAe,CAACD,GAClB,QAAQ,IAAI,+CAA+C,EAEzDX,EAAA,KAAC,MAAI,WAAU,oCACb,UAACC,EAAA,UAAG,UAAU,0BAA0B,SAA8B,mCACrEA,EAAA,SAAE,UAAU,OAAO,SAAwE,6EAE3FA,EAAA,IAAAY,EAAA,CAAS,GAAG,WAAW,QAAO,EAAC,IAClC,IAKAF,GAAA,YAAAA,EAAa,QAAS,gBACxB,QAAQ,IAAI,sCAAsC,EAEhDV,MAACa,WAAS,UAAWb,EAAA,IAAAF,EAAA,CAAQ,GAC3B,SAACE,MAAAC,EAAA,CAAmB,KAAMS,CAAA,CAAa,CACzC,KAEOA,GAAA,YAAAA,EAAa,QAAS,aACvB,YAAI,oCAAqCA,CAAW,EAE1DV,MAACa,WAAS,UAAWb,EAAA,IAAAF,EAAA,CAAQ,GAC3B,SAACE,MAAAI,EAAA,CAAmB,KAAMM,CAAA,CAAa,CACzC,KAKJ,QAAQ,IAAI,iDAAiD,QACrDZ,EAAQ,MAIZgB,EAAmB,IAEpBd,MAAAe,EAAA,CACC,SAACf,MAAAgB,EAAA,CAAO,GACV,EAKEC,EAAkB,CAAC,CAAE,YAAAP,EAAa,YAAAC,WAEnCE,EAAS,yBAAWf,EAAQ,IAC3B,eAACoB,EACC,UAAAlB,MAACmB,GAAM,QAASnB,MAACoB,IAAe,EAC9B,SAAArB,EAAA,KAACoB,GAAM,QAASnB,EAAA,IAACc,GAAiB,GAChC,UAACd,MAAAmB,EAAA,CAAM,KAAK,IAAI,cACbV,EAAU,aAAAC,EAA0B,YAAAC,EAA0B,CAC/D,SAGDQ,EAAM,MAAK,WAAW,QAASnB,MAACK,GAAY,GAAI,QAChDc,EAAM,MAAK,iBAAiB,QAASnB,MAACK,GAAY,GAAI,QACtDc,EAAM,MAAK,qBAAqB,QAASnB,MAACK,GAAY,GAAI,QAC1Dc,EAAM,MAAK,qBAAqB,QAASnB,MAACK,GAAY,GAAI,QAG1Dc,EAAM,MAAK,cAAc,QAASnB,MAACM,GAAU,GAAI,SAGjDa,EAAM,eAAUC,EAAe,cAAa,YAAY,EACvD,UAAApB,MAACmB,GAAM,KAAK,cAAc,QAASnB,MAACO,GAAU,GAAI,QACjDY,EAAM,MAAK,mBAAmB,QAASnB,EAAA,IAACQ,IAAQ,CAAI,GACvD,IACF,EACF,CACF,GACF","names":["Loading","jsxs","jsx","JobSeekerDashboard","lazy","__vitePreload","RecruiterDashboard","ProfilePage","CVPreview","CreateJob","EditJob","Dashboard","userProfile","currentUser","Navigate","Suspense","ProtectedContent","Layout","Outlet","DashboardRoutes","Routes","Route","ProtectedRoute"],"ignoreList":[],"sources":["../../src/routes/dashboardRoutes.tsx"],"sourcesContent":["import React, { lazy, Suspense } from 'react';\nimport { Routes, Route, Navigate, Outlet } from 'react-router-dom';\nimport ProtectedRoute from '../components/common/ProtectedRoute';\nimport Layout from '../components/Layout';\n\n// Loading component\nconst Loading = () => (\n  <div className=\"flex justify-center items-center h-screen\">\n    <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-600\"></div>\n    <div className=\"ml-4\">Dashboard laden...</div>\n  </div>\n);\n\n// Lazy loaded dashboard components\nconst JobSeekerDashboard = lazy(() => import('../components/dashboard/JobSeekerDashboard'));\nconst RecruiterDashboard = lazy(() => import('../components/dashboard/RecruiterDashboard'));\nconst ProfilePage = lazy(() => import('../pages/ProfilePage'));\nconst CVPreview = lazy(() => import('../pages/CVPreview'));\nconst CreateJob = lazy(() => import('../pages/CreateJob'));\nconst EditJob = lazy(() => import('../pages/EditJob'));\n\n// Dashboard component\nconst Dashboard = ({ userProfile, currentUser }: any) => {\n  console.log('Dashboard component rendering met:', { \n    currentUser: currentUser?.uid, \n    userProfile: userProfile?.role,\n    displayName: userProfile?.displayName\n  });\n  \n  // Controleer eerst of we een ingelogde gebruiker hebben maar geen profiel\n  if (currentUser && !userProfile) {\n    console.log('Gebruiker ingelogd maar geen profiel gevonden');\n    return (\n      <div className=\"bg-white shadow-md rounded-lg p-6\">\n        <h1 className=\"text-2xl font-bold mb-4\">Probleem met gebruikersprofiel</h1>\n        <p className=\"mb-4\">Je bent wel ingelogd, maar je gebruikersprofiel kon niet worden geladen.</p>\n        {/* Here you would render ProfileRecoveryComponent, but we're keeping it in App.tsx for simplicity */}\n        <Navigate to=\"/profile\" replace />\n      </div>\n    );\n  }\n  \n  // Als er een profiel is, verwijs door naar de juiste pagina\n  if (userProfile?.role === 'werkzoekende') {\n    console.log('Werkzoekende dashboard wordt geladen');\n    return (\n      <Suspense fallback={<Loading />}>\n        <JobSeekerDashboard user={userProfile} />\n      </Suspense>\n    );\n  } else if (userProfile?.role === 'recruiter') {\n    console.log('Recruiter dashboard wordt geladen', userProfile);\n    return (\n      <Suspense fallback={<Loading />}>\n        <RecruiterDashboard user={userProfile} />\n      </Suspense>\n    );\n  }\n  \n  // Als er geen profiel is, toon een laadscherm (fallback)\n  console.log('Geen profiel gevonden, laadscherm wordt getoond');\n  return <Loading />;\n};\n\n// Protected Content wrapper\nconst ProtectedContent = () => {\n  return (\n    <Layout>\n      <Outlet />\n    </Layout>\n  );\n};\n\n// Dashboard Routes\nconst DashboardRoutes = ({ userProfile, currentUser }: any) => {\n  return (\n    <Suspense fallback={<Loading />}>\n      <Routes>\n        <Route element={<ProtectedRoute />}>\n          <Route element={<ProtectedContent />}>\n            <Route path=\"/\" element={\n              <Dashboard userProfile={userProfile} currentUser={currentUser} />\n            } />\n            \n            {/* Profiel routes */}\n            <Route path=\"/profile\" element={<ProfilePage />} />\n            <Route path=\"/profile/:type\" element={<ProfilePage />} />\n            <Route path=\"/profile/jobseeker\" element={<ProfilePage />} />\n            <Route path=\"/profile/recruiter\" element={<ProfilePage />} />\n            \n            {/* CV Preview pagina */}\n            <Route path=\"/cv-preview\" element={<CVPreview />} />\n            \n            {/* Vacature maken/bewerken pagina - alleen voor recruiters */}\n            <Route element={<ProtectedRoute requiredRole=\"recruiter\" />}>\n              <Route path=\"/create-job\" element={<CreateJob />} />\n              <Route path=\"/edit-job/:jobId\" element={<EditJob />} />\n            </Route>\n          </Route>\n        </Route>\n      </Routes>\n    </Suspense>\n  );\n};\n\nexport default DashboardRoutes; "],"file":"assets/dashboardRoutes-B8hWVExg.js"}